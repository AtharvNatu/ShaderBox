#version 460
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(push_constant) uniform PushConstants {
    float time;
    float waveAmplitude;
    vec2 windDir;
    int N;     // tile size (added)
} pc;

layout(set = 0, binding = 0) buffer FFTBuffer {
    vec4 fftData[];
};
layout(set = 0, binding = 1) buffer DisplacementBuffer {
    vec4 displacement[];
};
layout(set = 0, binding = 2) buffer NormalBuffer {
    vec4 normals[];
};

void main()
{
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;
    if (x >= uint(pc.N) || y >= uint(pc.N)) return;

    uint index = y * uint(pc.N) + x;

    float height = sin((x + pc.time * 10.0) * 0.05) *
                   cos((y + pc.time * 10.0) * 0.05) * pc.waveAmplitude;

    displacement[index] = vec4(float(x), height, float(y), 0.0);
    normals[index] = vec4(0.0, 1.0, 0.0, 0.0);
}
