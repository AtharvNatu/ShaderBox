WinMain() => Program Started Successfully
resize() => Initialization Not Yet Completed or Failed !!!
fillInstanceExtensionNames() => Call 1 : vkEnumerateInstanceExtensionProperties() Succeeded
fillInstanceExtensionNames() => Call 2 : vkEnumerateInstanceExtensionProperties() Succeeded
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_device_group_creation
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_display
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_external_fence_capabilities
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_external_memory_capabilities
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_external_semaphore_capabilities
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_get_display_properties2
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_get_physical_device_properties2
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_get_surface_capabilities2
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_surface
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_surface_protected_capabilities
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_win32_surface
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_EXT_debug_report
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_EXT_debug_utils
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_EXT_direct_mode_display
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_EXT_surface_maintenance1
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_EXT_swapchain_colorspace
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_NV_external_memory_capabilities
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_KHR_portability_enumeration
fillInstanceExtensionNames() => Vulkan Instance Extension Name : VK_LUNARG_direct_driver_loading
fillInstanceExtensionNames() => VK_KHR_SURFACE_EXTENSION_NAME Extension Found
fillInstanceExtensionNames() => VK_KHR_WIN32_SURFACE_EXTENSION_NAME Extension Found
fillInstanceExtensionNames() => VALIDATION ON : VK_EXT_DEBUG_REPORT_EXTENSION_NAME Extension Supported
fillInstanceExtensionNames() => Enabled Vulkan Instance Extension Name : VK_KHR_surface
fillInstanceExtensionNames() => Enabled Vulkan Instance Extension Name : VK_KHR_win32_surface
fillInstanceExtensionNames() => Enabled Vulkan Instance Extension Name : VK_EXT_debug_report
createVulkanInstance() => fillInstanceExtensionNames() Succeeded
fillValidationLayerNames() => Call 1 : vkEnumerateInstanceLayerProperties() Succeeded
fillValidationLayerNames() => Call 2 : vkEnumerateInstanceLayerProperties() Succeeded
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_NV_optimus
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_NV_present
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_OBS_HOOK
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_RENDERDOC_Capture
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_LUNARG_api_dump
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_LUNARG_gfxreconstruct
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_KHRONOS_synchronization2
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_KHRONOS_validation
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_LUNARG_monitor
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_LUNARG_screenshot
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_KHRONOS_profiles
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_KHRONOS_shader_object
fillValidationLayerNames() => Vulkan Instance Layer Name : VK_LAYER_LUNARG_crash_diagnostic
fillValidationLayerNames() => VK_LAYER_KHRONOS_validation Supported
fillValidationLayerNames() => Enabled Vulkan Validation Layer Name : VK_LAYER_KHRONOS_validation
createVulkanInstance() => fillValidationLayerNames() Succeeded
createVulkanInstance() => vkCreateInstance() Succeeded
createValidationCallbackFunction() => vkGetInstanceProcAddr() Succeeded To Get Function Pointer For vkCreateDebugReportCallbackEXT
createValidationCallbackFunction() => vkGetInstanceProcAddr() Succeeded To Get Function Pointer For vkDestroyDebugReportCallbackEXT
createValidationCallbackFunction() => vkCreateDebugReportCallbackEXT_fnptr() Succeeded
createVulkanInstance() => createValidationCallbackFunction() Succeeded
initialize() => createVulkanInstance() Succeeded
getSupportedSurface() => vkCreateWin32SurfaceKHR() Succeeded
initialize() => getSupportedSurface() Succeeded
getPhysicalDevice() Call 1 => vkEnumeratePhysicalDevices() Succeeded
getPhysicalDevice() Call 2 => vkEnumeratePhysicalDevices() Succeeded
getPhysicalDevice() => free() Succeeded For isQueueSurfaceSupported_array
getPhysicalDevice() => free() Succeeded For vkQueueFamilyProperties_array
getPhysicalDevice() => Succeeded To Obtain Graphics Supported Physical Device
getPhysicalDevice() => Selected Physical Device Supports Tessellation Shader
getPhysicalDevice() => Selected Physical Device Supports Geometry Shader
initialize() => getPhysicalDevice() Succeeded

VULKAN INFORMATION
------------------------------------------------------------------------------------------------
Vulkan API Version : 1.4.312
Device Name : NVIDIA GeForce RTX 3060
Device Type : Discrete GPU (dGPU)
Vendor ID : 0x10de
Device ID : 0x2503
------------------------------------------------------------------------------------------------

printVkInfo() => free() Succeeded For vkPhysicalDevice_array
initialize() => printVkInfo() Succeeded
fillDeviceExtensionNames() => Call 1 : vkEnumerateDeviceExtensionProperties() Succeeded
fillDeviceExtensionNames() => Call 2 : vkEnumerateDeviceExtensionProperties() Succeeded
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_16bit_storage
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_8bit_storage
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_acceleration_structure
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_bind_memory2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_buffer_device_address
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_calibrated_timestamps
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_compute_shader_derivatives
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_cooperative_matrix
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_copy_commands2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_create_renderpass2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_dedicated_allocation
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_deferred_host_operations
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_depth_clamp_zero_one
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_depth_stencil_resolve
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_descriptor_update_template
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_device_group
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_draw_indirect_count
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_driver_properties
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_dynamic_rendering
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_dynamic_rendering_local_read
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_external_fence
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_external_fence_win32
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_external_memory
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_external_memory_win32
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_external_semaphore
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_external_semaphore_win32
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_format_feature_flags2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_fragment_shader_barycentric
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_fragment_shading_rate
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_get_memory_requirements2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_global_priority
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_image_format_list
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_imageless_framebuffer
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_index_type_uint8
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_line_rasterization
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_load_store_op_none
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance1
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance3
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance4
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance5
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance6
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance7
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_maintenance8
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_map_memory2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_multiview
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_pipeline_binary
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_pipeline_executable_properties
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_pipeline_library
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_present_id
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_present_wait
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_push_descriptor
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_ray_query
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_ray_tracing_maintenance1
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_ray_tracing_pipeline
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_ray_tracing_position_fetch
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_relaxed_block_layout
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_sampler_mirror_clamp_to_edge
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_sampler_ycbcr_conversion
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_separate_depth_stencil_layouts
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_atomic_int64
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_bfloat16
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_clock
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_draw_parameters
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_expect_assume
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_float16_int8
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_float_controls
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_float_controls2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_integer_dot_product
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_maximal_reconvergence
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_non_semantic_info
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_quad_control
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_relaxed_extended_instruction
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_subgroup_extended_types
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_subgroup_rotate
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_subgroup_uniform_control_flow
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_shader_terminate_invocation
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_spirv_1_4
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_storage_buffer_storage_class
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_swapchain
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_swapchain_mutable_format
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_synchronization2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_timeline_semaphore
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_uniform_buffer_standard_layout
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_variable_pointers
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_vertex_attribute_divisor
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_decode_av1
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_decode_h264
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_decode_h265
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_decode_queue
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_decode_vp9
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_encode_h264
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_encode_h265
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_encode_quantization_map
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_encode_queue
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_maintenance1
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_maintenance2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_video_queue
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_vulkan_memory_model
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_win32_keyed_mutex
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_workgroup_memory_explicit_layout
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_KHR_zero_initialize_workgroup_memory
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_4444_formats
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_attachment_feedback_loop_dynamic_state
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_attachment_feedback_loop_layout
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_blend_operation_advanced
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_border_color_swizzle
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_buffer_device_address
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_calibrated_timestamps
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_color_write_enable
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_conditional_rendering
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_conservative_rasterization
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_custom_border_color
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_depth_bias_control
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_depth_clamp_control
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_depth_clamp_zero_one
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_depth_clip_control
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_depth_clip_enable
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_depth_range_unrestricted
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_descriptor_buffer
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_descriptor_indexing
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_device_address_binding_report
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_device_fault
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_device_generated_commands
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_discard_rectangles
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_dynamic_rendering_unused_attachments
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_extended_dynamic_state
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_extended_dynamic_state2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_extended_dynamic_state3
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_external_memory_host
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_fragment_shader_interlock
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_full_screen_exclusive
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_global_priority
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_global_priority_query
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_graphics_pipeline_library
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_hdr_metadata
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_host_image_copy
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_host_query_reset
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_image_2d_view_of_3d
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_image_robustness
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_image_sliced_view_of_3d
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_image_view_min_lod
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_index_type_uint8
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_inline_uniform_block
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_legacy_vertex_attributes
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_line_rasterization
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_load_store_op_none
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_memory_budget
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_memory_priority
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_mesh_shader
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_multi_draw
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_mutable_descriptor_type
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_nested_command_buffer
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_non_seamless_cube_map
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_opacity_micromap
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_pageable_device_local_memory
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_pci_bus_info
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_pipeline_creation_cache_control
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_pipeline_creation_feedback
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_pipeline_library_group_handles
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_pipeline_robustness
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_post_depth_coverage
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_present_mode_fifo_latest_ready
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_primitive_topology_list_restart
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_primitives_generated_query
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_private_data
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_provoking_vertex
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_queue_family_foreign
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_robustness2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_sample_locations
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_sampler_filter_minmax
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_scalar_block_layout
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_separate_stencil_usage
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_atomic_float
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_demote_to_helper_invocation
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_image_atomic_int64
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_module_identifier
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_object
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_replicated_composites
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_subgroup_ballot
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_subgroup_vote
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_shader_viewport_index_layer
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_subgroup_size_control
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_swapchain_maintenance1
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_texel_buffer_alignment
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_tooling_info
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_transform_feedback
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_vertex_attribute_divisor
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_vertex_attribute_robustness
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_vertex_input_dynamic_state
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_ycbcr_2plane_444_formats
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_EXT_ycbcr_image_arrays
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_acquire_winrt_display
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_clip_space_w_scaling
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_cluster_acceleration_structure
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_compute_shader_derivatives
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_cooperative_matrix
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_cooperative_matrix2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_cooperative_vector
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_copy_memory_indirect
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_corner_sampled_image
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_coverage_reduction_mode
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_cuda_kernel_launch
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_dedicated_allocation
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_dedicated_allocation_image_aliasing
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_descriptor_pool_overallocation
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_device_diagnostic_checkpoints
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_device_diagnostics_config
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_device_generated_commands
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_device_generated_commands_compute
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_disk_cache_utils
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_external_compute_queue
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_external_memory
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_external_memory_win32
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_fill_rectangle
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_fragment_coverage_to_color
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_fragment_shader_barycentric
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_fragment_shading_rate_enums
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_framebuffer_mixed_samples
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_geometry_shader_passthrough
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_inherited_viewport_scissor
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_internal_nvpresent
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_linear_color_attachment
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_low_latency
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_low_latency2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_memory_decompression
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_mesh_shader
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_optical_flow
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_partitioned_acceleration_structure
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_present_metering
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_raw_access_chains
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_ray_tracing
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_ray_tracing_invocation_reorder
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_ray_tracing_motion_blur
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_representative_fragment_test
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_sample_mask_override_coverage
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_scissor_exclusive
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_shader_atomic_float16_vector
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_shader_image_footprint
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_shader_sm_builtins
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_shader_subgroup_partitioned
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_shading_rate_image
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_viewport_array2
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_viewport_swizzle
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NV_win32_keyed_mutex
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NVX_binary_import
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NVX_image_view_handle
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_NVX_multiview_per_view_attributes
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_AMD_buffer_marker
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_GOOGLE_hlsl_functionality1
fillDeviceExtensionNames() => Vulkan Device Extension Name : VK_GOOGLE_user_type

------------------------------------------------------------------------------------------------
fillDeviceExtensionNames() => Vulkan Device Extension Count : 251
------------------------------------------------------------------------------------------------

fillDeviceExtensionNames() => VK_KHR_SWAPCHAIN_EXTENSION_NAME Extension Found
fillDeviceExtensionNames() => Enabled Vulkan Device Extension Name : VK_KHR_swapchain
createVulkanDevice() => fillDeviceExtensionNames() Succeeded
createVulkanDevice() => vkCreateDevice() Succeeded
initialize() => createVulkanDevice() Succeeded
getDeviceQueue() => vkGetDeviceQueue() Succeeded ...
getPhysicalDeviceSurfaceFormatAndColorSpace() => Call 1 : vkGetPhysicalDeviceSurfaceFormatsKHR() Succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() => Call 2 : vkGetPhysicalDeviceSurfaceFormatsKHR() Succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() => free() Succeeded For vkSurfaceFormatKHR_array
createSwapchain() => getPhysicalDeviceSurfaceFormatAndColorSpace() Succeeded
createSwapchain() => vkGetPhysicalDeviceSurfaceCapabilitiesKHR() Succeeded
createSwapchain() => [If Block] => Swapchain Image Width x Swapchain Image Height = 784 x 561
getPhysicalDevicePresentMode() => Call 1 : vkGetPhysicalDeviceSurfacePresentModesKHR() Succeeded
getPhysicalDevicePresentMode() => Call 2 : vkGetPhysicalDeviceSurfacePresentModesKHR() Succeeded

------------------------------------------------------------------------------------------------
Vulkan Physical Device Present Mode : VK_PRESENT_MODE_MAILBOX_KHR
------------------------------------------------------------------------------------------------

getPhysicalDevicePresentMode() => free() Succeeded For vkPresentModeKHR_array
createSwapchain() => getPhysicalDevicePresentMode() Succeeded
createSwapchain() => vkCreateSwapchainKHR() Succeeded
initialize() => createSwapchain() Succeeded
createImagesAndImageViews() => Call 1 : vkGetSwapchainImagesKHR() => Swapchain Image Count = 2
createImagesAndImageViews() => Call 2 : vkGetSwapchainImagesKHR() Succeeded
createImagesAndImageViews() => vkCreateImageView() Succeeded For Index : 0
createImagesAndImageViews() => vkCreateImageView() Succeeded For Index : 1
createImagesAndImageViews() => getSupportedDepthFormat() Succeded
createImagesAndImageViews() => vkCreateImage() Succeeded
createImagesAndImageViews() => vkAllocateMemory() Succeeded For Depth
createImagesAndImageViews() => vkBindImageMemory() Succeeded For Depth
createImagesAndImageViews() => vkCreateImageView() Succeeded For Depth
initialize() => createImagesAndImageViews() Succeeded
createCommandPool() => vkCreateCommandPool() Succeeded
initialize() => createCommandPool() Succeeded
createCommandBuffers() => vkAllocateCommandBuffers() Succeeded For Index : 0
createCommandBuffers() => vkAllocateCommandBuffers() Succeeded For Index : 1
initialize() => createCommandBuffers() Succeeded

Assets/Images/Grass-2.png Properties
-------------------------------------------
Image Width = 626
Image Height = 430
Image Size = 1076720
-------------------------------------------

createTexture() => vkCreateBuffer() Succeeded For Staging Buffer : Assets/Images/Grass-2.png
createTexture() => vkAllocateMemory() Succeeded For Staging Buffer : Assets/Images/Grass-2.png
createTexture() => vkBindBufferMemory() Succeeded For Staging Buffer : Assets/Images/Grass-2.png
createTexture() => vkMapMemory() Succeeded For Staging Buffer : Assets/Images/Grass-2.png
createTexture() => stbi_image_free() Called For Texture : Assets/Images/Grass-2.png
createTexture() => vkCreateImage() Succeeded For Texture : Assets/Images/Grass-2.png
createTexture() => vkAllocateMemory() Succeeded For Texture : Assets/Images/Grass-2.png
createTexture() => vkBindImageMemory() Succeeded For Texture : Assets/Images/Grass-2.png
createTexture() => vkAllocateCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkBeginCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkEndCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkQueueSubmit() Succeeded For vkSubmitInfo_transition_image_layout
createTexture() => vkQueueWaitIdle() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkFreeCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkAllocateCommandBuffers() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkBeginCommandBuffer() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkEndCommandBuffer() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkQueueSubmit() Succeeded For vkSubmitInfo_buffer_to_copy
createTexture() => vkQueueWaitIdle() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkFreeCommandBuffers() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkAllocateCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkBeginCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkEndCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkQueueSubmit() Succeeded For vkSubmitInfo_transition_image_layout
createTexture() => vkQueueWaitIdle() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkFreeCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkDestroyBuffer() Succeeded For vkBuffer_stagingBuffer
createTexture() => vkFreeMemory() Succeeded For vkDeviceMemory_stagingBuffer
createTexture() => vkCreateImageView() Succeeded For Texture : Assets/Images/Grass-2.png
createTexture() => vkCreateSampler() Succeeded For Texture : Assets/Images/Grass-2.png
initialize() => createTexture() Succeeded For Grass.png

Assets/Images/Flowmap.png Properties
-------------------------------------------
Image Width = 1024
Image Height = 1024
Image Size = 4194304
-------------------------------------------

createTexture() => vkCreateBuffer() Succeeded For Staging Buffer : Assets/Images/Flowmap.png
createTexture() => vkAllocateMemory() Succeeded For Staging Buffer : Assets/Images/Flowmap.png
createTexture() => vkBindBufferMemory() Succeeded For Staging Buffer : Assets/Images/Flowmap.png
createTexture() => vkMapMemory() Succeeded For Staging Buffer : Assets/Images/Flowmap.png
createTexture() => stbi_image_free() Called For Texture : Assets/Images/Flowmap.png
createTexture() => vkCreateImage() Succeeded For Texture : Assets/Images/Flowmap.png
createTexture() => vkAllocateMemory() Succeeded For Texture : Assets/Images/Flowmap.png
createTexture() => vkBindImageMemory() Succeeded For Texture : Assets/Images/Flowmap.png
createTexture() => vkAllocateCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkBeginCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkEndCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkQueueSubmit() Succeeded For vkSubmitInfo_transition_image_layout
createTexture() => vkQueueWaitIdle() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkFreeCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkAllocateCommandBuffers() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkBeginCommandBuffer() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkEndCommandBuffer() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkQueueSubmit() Succeeded For vkSubmitInfo_buffer_to_copy
createTexture() => vkQueueWaitIdle() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkFreeCommandBuffers() Succeeded For vkCommandBuffer_buffer_to_image_copy
createTexture() => vkAllocateCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkBeginCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkEndCommandBuffer() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkQueueSubmit() Succeeded For vkSubmitInfo_transition_image_layout
createTexture() => vkQueueWaitIdle() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkFreeCommandBuffers() Succeeded For vkCommandBuffer_transition_image_layout
createTexture() => vkDestroyBuffer() Succeeded For vkBuffer_stagingBuffer
createTexture() => vkFreeMemory() Succeeded For vkDeviceMemory_stagingBuffer
createTexture() => vkCreateImageView() Succeeded For Texture : Assets/Images/Flowmap.png
createTexture() => vkCreateSampler() Succeeded For Texture : Assets/Images/Flowmap.png
initialize() => createTexture() Succeeded For Flowmap.png
createShaders() => Succeeded In Opening SPIR-V Shader File : Bin/Grass.vert.spv
createShaders() => Successfully Read Shader From SPIR-V Shader File : Bin/Grass.vert.spv
createShaders() => Closed SPIR-V File : Bin/Grass.vert.spv
createShaders() => vkCreateShaderModule() Succeeded For Vertex Shader
createShaders() => free() Succeeded For shaderData
createShaders() => Vertex Shader Module Successfully Created
createShaders() => Succeeded In Opening SPIR-V Shader File : Bin/Grass.geom.spv
createShaders() => Successfully Read Shader From SPIR-V Shader File : Bin/Grass.geom.spv
createShaders() => Closed SPIR-V File : Bin/Grass.geom.spv
createShaders() => vkCreateShaderModule() Succeeded For Geometry Shader
createShaders() => free() Succeeded For shaderData
createShaders() => Geometry Shader Module Successfully Created
createShaders() => Succeeded In Opening SPIR-V Shader File : Bin/Grass.frag.spv
createShaders() => Successfully Read Shader From SPIR-V Shader File : Bin/Grass.frag.spv
createShaders() => Closed SPIR-V File : Bin/Grass.frag.spv
createShaders() => vkCreateShaderModule() Succeeded For Fragment Shader
createShaders() => free() Succeeded For shaderData
createShaders() => Fragment Shader Module Successfully Created
initialize() => createShaders() Succeeded
createRenderPass() => vkCreateRenderPass() Succeeded
initialize() => createRenderPass() Succeeded
initialize() => createFramebuffers() Succeeded
initialize() => createSemaphores() Succeeded
createFences() => vkCreateFence() Succeeded For Index : 0
createFences() => vkCreateFence() Succeeded For Index : 1
initialize() => createFences() Succeeded
createVertexBuffer() => vkCreateBuffer() Succeeded For Staging Vertex Position Buffer
createVertexBuffer() => vkAllocateMemory() Succeeded For Vertex Position Buffer
createVertexBuffer() => vkBindBufferMemory() Succeeded For Vertex Position Buffer
createVertexBuffer() => vkMapMemory() Succeeded For Vertex Position Buffer
createVertexBuffer() => vkCreateBuffer() Succeeded For Vertex Position Device-Local Buffer
createVertexBuffer() => vkAllocateMemory() Succeeded For Vertex Position Device-Local Buffer
createVertexBuffer() => vkBindBufferMemory() Succeeded For Vertex Position Device-Local Buffer
createVertexBuffer() => vkAllocateCommandBuffers() Succeeded In Allocating Command Buffer For Buffer-Copy
createVertexBuffer() => vkBeginCommandBuffer() Succeeded For Buffer-Copy
createVertexBuffer() => vkEndCommandBuffer() Succeeded For Buffer-Copy
createVertexBuffer() => vkQueueSubmit() Succeeded For Buffer-Copy
createVertexBuffer() => vkQueueWaitIdle() Succeeded For Buffer-Copy
createVertexBuffer() => vkFreeCommandBuffers() Succeeded For Buffer-Copy
createVertexBuffer() => vkFreeMemory() Succeeded For vertexData_stagingBuffer.vkDeviceMemory
createVertexBuffer() => vkDestroyBuffer() Succeeded For vertexData_stagingBuffer.vkBuffer
createUniformBuffer() => vkCreateBuffer() Succeeded For Uniform Data
createUniformBuffer() => vkAllocateMemory() Succeeded For Uniform Data
createUniformBuffer() => vkBindBufferMemory() Succeeded For Uniform Data
createUniformBuffer() => updateUniformBuffer() Succeeded
createDescriptorSetLayout() => vkCreateDescriptorSetLayout() Succeeded
createPipelineLayout() => vkCreatePipelineLayout() Succeeded
createDescriptorPool() => vkCreateDescriptorPool() Succeeded
createDescriptorSet() => vkAllocateDescriptorSets() Succeeded For vkDescriptorSet
createPipeline() => vkCreatePipelineCache() Succeeded
createPipeline() => vkCreateGraphicsPipelines() Succeeded
createPipeline() => vkDestroyPipelineCache() Succeeded
buildCommandBuffers() => vkResetCommandBuffer() Succeeded For Index : 0
buildCommandBuffers() => vkBeginCommandBuffer() Succeeded For Index : 0
buildCommandBuffers() => vkEndCommandBuffer() Succeeded For Index : 0
buildCommandBuffers() => vkResetCommandBuffer() Succeeded For Index : 1
buildCommandBuffers() => vkBeginCommandBuffer() Succeeded For Index : 1
buildCommandBuffers() => vkEndCommandBuffer() Succeeded For Index : 1
initialize() => buildCommandBuffers() Succeeded
initialize() => Initialization Completed Successfully
WinMain() => initialize() Succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() => Call 1 : vkGetPhysicalDeviceSurfaceFormatsKHR() Succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() => Call 2 : vkGetPhysicalDeviceSurfaceFormatsKHR() Succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() => free() Succeeded For vkSurfaceFormatKHR_array
createSwapchain() => getPhysicalDeviceSurfaceFormatAndColorSpace() Succeeded
createSwapchain() => vkGetPhysicalDeviceSurfaceCapabilitiesKHR() Succeeded
createSwapchain() => [If Block] => Swapchain Image Width x Swapchain Image Height = 2048 x 1152
getPhysicalDevicePresentMode() => Call 1 : vkGetPhysicalDeviceSurfacePresentModesKHR() Succeeded
getPhysicalDevicePresentMode() => Call 2 : vkGetPhysicalDeviceSurfacePresentModesKHR() Succeeded

------------------------------------------------------------------------------------------------
Vulkan Physical Device Present Mode : VK_PRESENT_MODE_MAILBOX_KHR
------------------------------------------------------------------------------------------------

getPhysicalDevicePresentMode() => free() Succeeded For vkPresentModeKHR_array
createSwapchain() => getPhysicalDevicePresentMode() Succeeded
createSwapchain() => vkCreateSwapchainKHR() Succeeded
createImagesAndImageViews() => Call 1 : vkGetSwapchainImagesKHR() => Swapchain Image Count = 2
createImagesAndImageViews() => Call 2 : vkGetSwapchainImagesKHR() Succeeded
createImagesAndImageViews() => vkCreateImageView() Succeeded For Index : 0
createImagesAndImageViews() => vkCreateImageView() Succeeded For Index : 1
createImagesAndImageViews() => getSupportedDepthFormat() Succeded
createImagesAndImageViews() => vkCreateImage() Succeeded
createImagesAndImageViews() => vkAllocateMemory() Succeeded For Depth
createImagesAndImageViews() => vkBindImageMemory() Succeeded For Depth
createImagesAndImageViews() => vkCreateImageView() Succeeded For Depth
createRenderPass() => vkCreateRenderPass() Succeeded
createCommandBuffers() => vkAllocateCommandBuffers() Succeeded For Index : 0
createCommandBuffers() => vkAllocateCommandBuffers() Succeeded For Index : 1
createPipelineLayout() => vkCreatePipelineLayout() Succeeded
createPipeline() => vkCreatePipelineCache() Succeeded
createPipeline() => vkCreateGraphicsPipelines() Succeeded
createPipeline() => vkDestroyPipelineCache() Succeeded
buildCommandBuffers() => vkResetCommandBuffer() Succeeded For Index : 0
buildCommandBuffers() => vkBeginCommandBuffer() Succeeded For Index : 0
buildCommandBuffers() => vkEndCommandBuffer() Succeeded For Index : 0
buildCommandBuffers() => vkResetCommandBuffer() Succeeded For Index : 1
buildCommandBuffers() => vkBeginCommandBuffer() Succeeded For Index : 1
buildCommandBuffers() => vkEndCommandBuffer() Succeeded For Index : 1
uninitialize() => vkDeviceWaitIdle() Succeeded
uninitialize() => vkDestroyFence() Succeeded For Index : 0
uninitialize() => vkDestroyFence() Succeeded For Index : 1
uninitialize() => free() Succeeded For vkFence_array
uninitialize() => vkDestroySemaphore() Succeeded For vkSemaphore_renderComplete
uninitialize() => vkDestroySemaphore() Succeeded For vkSemaphore_backBuffer
uninitialize() => vkDestroyFramebuffer() Succeeded For Index : 0
uninitialize() => vkDestroyFramebuffer() Succeeded For Index : 1
uninitialize() => free() Succeeded For vkFramebuffer_array
uninitialize() => vkDestroyRenderPass() Succeeded
uninitialize() => vkDestroyShaderModule() Succeeded For Fragment Shader
uninitialize() => vkDestroyShaderModule() Succeeded For Geometry Shader
uninitialize() => vkDestroyShaderModule() Succeeded For Vertex Shader
~Grass() => vkFreeMemory() Succeeded For uniformData.vkDeviceMemory
~Grass() => vkDestroyBuffer() Succedded For uniformData.vkBuffer
~Grass() => vkFreeMemory() Succeeded For vertexData_grass_position.vkDeviceMemory
~Grass() => vkDestroyBuffer() Succeeded For vertexData_grass_position.vkBuffer
uninitialize() => vkDestroySampler() Succeeded For vkSampler_texture_flowmap
uninitialize() => vkDestroyImageView() Succeeded For vkImage_texture_flowmap
uninitialize() => vkFreeMemory() Succeeded For vkDeviceMemory_texture_flowmap
uninitialize() => vkDestroyImage() Succeeded For vkImage_texture_flowmap
uninitialize() => vkDestroySampler() Succeeded For vkSampler_texture_grass
uninitialize() => vkDestroyImageView() Succeeded For vkImage_texture_grass
uninitialize() => vkFreeMemory() Succeeded For vkDeviceMemory_texture_grass
uninitialize() => vkDestroyImage() Succeeded For vkImage_texture_grass
uninitialize() => vkFreeCommandBuffers() Succeeded For Index : 0
uninitialize() => vkFreeCommandBuffers() Succeeded For Index : 1
uninitialize() => free() Succeeded For vkCommandBuffer_array
uninitialize() => vkDestroyCommandPool() Succeeded
uninitialize() => vkDestroyImageView() Succeeded For vkImageView_depth
uninitialize() => vkDestroyImage() Succeeded For vkImage_depth
uninitialize() => vkFreeMemory() Succeeded For vkDeviceMemory_depth
uninitialize() => vkDestroyImageView() Succeeded
uninitialize() => free() Succeeded For swapchainImageView_array
uninitialize() => free() Succeeded For swapchainImage_array
uninitialize() => vkDestroySwapchainKHR() Succeeded
uninitialize() => vkDestroyDevice() Succeeded
uninitialize() => vkDestroySurfaceKHR() Succeeded
uninitialize() => vkDestroyInstance() Succeeded
uninitialize() => Program Terminated Successfully
